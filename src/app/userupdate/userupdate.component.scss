 /* Your existing styles here */

.mat-tab-group {
  margin-bottom: 48px;
}

form {
  width: 80rem;
  margin: 0 auto;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  // box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  margin-top: 50px;
  padding-top: 5px;
}


label {
  display: block;
  margin-bottom: 5px;
  font-weight: bold;
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="tel"],
textarea {
  width: 100%;
  padding: 10px;
  margin-bottom: 10px;
  border: 1px solid #ccc;
  border-radius: 3px;
}

button {
  padding: 10px 20px;
  background-color: #2F3351;
  color: #fff;
  border: none;
  border-radius: 3px;
  cursor: pointer;
  margin-right: 69rem;
}

.button:disabled{
  padding: 10px 20px;
  background-color: rgba(47, 51, 81, 0.6);
  color: #fff;
  border: none;
  border-radius: 3px;
  cursor:not-allowed;
  margin-right: 2rem;
}

.check{
  width: 100%;
  padding: 10px;
  margin-bottom: 10px;
  border: 1px solid #ccc;
  border-radius: 3px;
}

.check1{
  width: 43%;
  padding: 10px;
  margin-bottom: 10px;
  border: 1px solid #ccc;
  border-radius: 3px;
}

// button:disabled {
//   background-color: #ccc;
//   cursor: not-allowed;
// }

.form-group {
  display: inline;
  // margin-right: 10px; /* Adjust this margin as needed to separate the elements */
}

.totalDetails {
  display: flex important;
  justify-content: space-between important;
}

.form-group {
  flex: 1 important;
}

.totalDetails {
  display: flex;
}

.totalDetails .userdetails,
.totalDetails .contact-details {
  flex: 1;
  padding: 0 10px;
}

.inputtag{
  width: 14rem;
}

.description{
  width: 100%;
  padding: 10px;
  margin-bottom: 10px;
  border: 1px solid #ccc;
  border-radius: 3px;
}
.totalDetails{
  margin-top: 20px;
}

.contactdetails{
  margin-right: 30rem;
}

// .my-custom-class{
//   border: 30px solid red !important;
//   background-color: aquamarine;

// }

:host ::ng-deep .mat-tab-label-active {
  border-width: 9px;
  border-style: solid;
  border-color: orange;
}

.mat-mdc-tab-header { border: 1px solid red; }


.dialog-content {
  padding: 20px;
  background-color: #f0f0f0;
  border: 1px solid #ccc;
  border-radius: 5px;
  text-align: center;
}

.access-groups {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  border: 1px solid #ccc;
  border-radius: 5px;
  background-color: #fff;
  padding: 10px;
  height: 100px;
}

.access-group {
  cursor: pointer;


}

.access-group-name {
  font-weight: bold;
  // height: 30px;
}

.col {
  display: inline-block;
  width: 49%;
}

.col1 {
  margin-right: 2%;
}

.col2 {
  margin-left: 2%;
}

.access-codes {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  height: 100px;
}

.access-code {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.scrollable {
  max-height: 200px;
  overflow-y: auto;
}

.access-group-item.clicked {
  background-color: rgb(115, 115, 238); /* Set your desired background color */
  color: white; /* Set text color to improve visibility */
  cursor: pointer; /* Change cursor to indicate clickability */
}

.code-item {
  width: 150px; /* Adjust the width as needed */
  display: inline-block;
}

.description-item {
  display: inline-block;

}


.buttons1 {
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  width: 100%; /* Adjust the width as needed */
}

button.cancel-btn,
button.save-btn {
  width: 48%; /* Adjust the width as needed */
  right: 0;
}
.custom-checkbox{
  background-color: blue !important;
  // width:100px;
  // height: 30px;

}

.red-checkbox {
   background-color: blue;
}

/* Add the following styles or modify the existing ones */
.is-invalid {
  border: 1px solid red;
  /* Add any other styling you want for the invalid state */
}

// .invalid-feedback {
//   color: red;
//   /* Add any other styling you want for the error message */
// }

.invalid-field {
  border-color: 2px solid red;
}

.checkbox-label {
  display: inline-block;
  margin-right: 10px; /* Adjust the margin as needed */
}

.has-error {
  input {
    border: 2px solid red; // Red border for the input fields
  }

  .text-danger {
    color: red; // Red text color for error messages
  }
}

input.ng-invalid.ng-dirty.ng-touched {
  border: 1px solid red;
}




